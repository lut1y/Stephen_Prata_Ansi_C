#INCLUDE <STDIO.H>
#INCLUDE <STDLIB.H>
#INCLUDE <STRING.H>
#INCLUDE <CTYPE.H>

#DEFINE SIZE 64
CHAR *SGETS(CHAR *, INT);

INT TASK3(VOID) {
	FILE *SRC, *DEST;
	CHAR NAME_SRC[SIZE],
		 NAME_DEST[SIZE];
	INT BYTE;
	
	PRINTF("ENTER NAME OF FILE-SOURCE: ");
	SGETS(NAME_SRC, SIZE);
	
	IF((SRC = FOPEN(NAME_SRC, "R")) == NULL) {
		PRINTF("CAN NOT OPEN %S.\N", NAME_SRC);
		EXIT(EXIT_FAILURE);
	}
	
	PRINTF("ENTER NAME OF FILE-DESTINATION: ");
	SGETS(NAME_DEST, SIZE);
	
	IF((DEST = FOPEN(NAME_DEST, "W")) == NULL) {
		PRINTF("CAN NOT OPEN %S.\N", NAME_DEST);
		EXIT(EXIT_FAILURE);
	}
	
	WHILE((BYTE = GETC(SRC)) != EOF) {
		PUTC(TOUPPER(BYTE), DEST);
	}
	
	IF(FCLOSE(DEST) != 0) {
		PRINTF("CAN NOT CLOSE %S", NAME_DEST);
		EXIT(EXIT_FAILURE);
	}
	
	IF(FCLOSE(SRC) != 0) {
		PRINTF("CAN NOT CLOSE %S", NAME_SRC);
		EXIT(EXIT_FAILURE);
	}
	
	RETURN 0;
}

CHAR *SGETS(CHAR *ST, INT N) {
	CHAR *RET_VAL;
	CHAR *FIND;
	
	RET_VAL = FGETS(ST, N, STDIN);
	IF(RET_VAL) {
		FIND = STRCHR(ST, '\N');
		IF(FIND) 
			*FIND = '\0';
		ELSE
			WHILE(GETCHAR() != '\N') CONTINUE;	
	}	
	RETURN RET_VAL;
}
